// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty;

  A2Cribs.FLDash = (function() {

    function FLDash(uiWidget) {
      this.uiWidget = uiWidget;
      this.Listings = {};
      this.OrderItems = {};
      this.FL_Order = null;
      this.uiFL_Form = $('.featured-listing-order-item').first();
      this.uiListingsList = this.uiWidget.find('#listings_list');
      this.uiOrderItemsList = this.uiWidget.find('#orderItems_list');
      this.initTemplates();
      this.setupEventHandlers();
      this.loadListings();
    }

    FLDash.prototype.setupEventHandlers = function() {
      var _this = this;
      this.uiWidget.find("#listings_list").on('click', '.listing-item', function(event) {
        var listing_id;
        listing_id = $(event.currentTarget).data('id');
        if (!(_this.OrderItems[listing_id] != null)) {
          _this.addOrderItem(listing_id);
        }
        return _this.editOrderItem(listing_id);
      });
      this.uiOrderItemsList.on('click', 'a', function(event) {
        var id, target;
        target = $(event.currentTarget);
        id = target.data('id');
        if (target.hasClass('edit')) {
          return _this.editOrderItem(id);
        } else if (target.hasClass('remove')) {
          return _this.removeOrderItem(id);
        }
      });
      this.uiWidget.find("#buyNow").click(function() {
        return _this.buy();
      });
      this.uiWidget.find(".feature-listing").click(function() {
        return _this.featureListing();
      });
      return this.uiFL_Form.on('orderItemChanged', function(event, FL) {
        var listing_id;
        listing_id = FL.listing_id;
        return _this.uiOrderItemsList.find(".orderItem[data-id=" + listing_id + "] .price").html(" $" + (FL.getPrice().toFixed(2)));
      });
    };

    FLDash.prototype.loadListings = function() {
      var _this = this;
      return $.getJSON('/listings/GetListing', function(listings) {
        var data, list, listing, _i, _len;
        _this.Listings = {};
        list = "";
        for (_i = 0, _len = listings.length; _i < _len; _i++) {
          listing = listings[_i];
          data = {
            listing_id: listing.Listing.listing_id,
            address: listing.Marker.street_address,
            altName: listing.Marker.alternate_name
          };
          _this.Listings[data.listing_id] = data;
          list += _this.ListingTemplate(data);
        }
        return _this.uiListingsList.html(list);
      });
    };

    FLDash.prototype.addOrderItem = function(listing_id) {
      var data, listing;
      listing = this.Listings[listing_id];
      data = {
        address: listing.address,
        price: 0.00,
        id: listing.listing_id
      };
      this.OrderItems[listing_id] = {};
      return this.uiOrderItemsList.append(this.OrderItemTemplate(data));
    };

    FLDash.prototype.editOrderItem = function(listing_id) {
      var listing, _ref;
      listing = this.Listings[listing_id];
      if (this.FL_Order != null) {
        this.OrderItems[this.FL_Order.listing_id] = this.FL_Order.getOrderItem();
        this.FL_Order.clear(false);
      }
      this.FL_Order = new A2Cribs.Order.FeaturedListing(this.uiFL_Form, listing.listing_id, listing.address, {
        selected_dates: (_ref = this.OrderItems[listing_id].item) != null ? _ref.dates : void 0
      });
      return console.log(this.FL_Order);
    };

    FLDash.prototype.removeOrderItem = function(listing_id) {
      var _ref;
      if (((_ref = this.FL_Order) != null ? _ref.listing_id : void 0) === listing_id) {
        this.FL_Order.clear();
      }
      this.uiOrderItemsList.find(".orderItem[data-id=" + listing_id + "]").remove();
      return delete this.OrderItems[listing_id];
    };

    FLDash.prototype.initTemplates = function() {
      var ListingHTML, OrderItemHTML;
      ListingHTML = "<div class = 'listing-item' data-id='<%= listing_id %>'>\n    <strong><%= address %></strong> <%= altName %>\n</div>";
      this.ListingTemplate = _.template(ListingHTML);
      OrderItemHTML = "<tr class = 'orderItem' data-id = '<%= id %>'>\n    <td><span  class = 'address'><%= address %></span></td>\n    <td><span class = 'price'?>$<%= price %></span></td>\n    <td class = 'actions'>\n        <a href = '#' class = 'edit' data-id = '<%= id %>'><i class = 'icon-edit'></i></a>   \n        <a href = '#' class = 'remove' data-id = '<%= id %>'><i class = 'icon-remove-circle'></i></a>\n    </td>\n</tr>";
      return this.OrderItemTemplate = _.template(OrderItemHTML);
    };

    FLDash.prototype.buy = function() {
      var key, order, orderItem, _ref;
      if (this.FL_Order) {
        this.OrderItems[this.FL_Order.listing_id] = this.FL_Order.getOrderItem();
      }
      order = [];
      _ref = this.OrderItems;
      for (key in _ref) {
        if (!__hasProp.call(_ref, key)) continue;
        orderItem = _ref[key];
        order.push(orderItem);
      }
      return A2Cribs.Order.BuyItems(order);
    };

    FLDash.prototype.featureListing = function() {
      var post_data, url,
        _this = this;
      if (!(this.FL != null)) {
        return;
      }
      url = myBaseUrl + "order/suFeatureListing";
      post_data = {
        'orderItem': JSON.stringify(this.FL.getOrderItem())
      };
      return $.post(url, post_data, function(data) {
        var response;
        response = JSON.parse(data);
        if (!(response != null)) {
          return alertify.error("Something went horribly wrong");
        } else if (response.success) {
          alertify.success(response.msg);
          return _this.uiWidget.find(".fl_form").fadeOut("fast");
        } else {
          return alertify.error(response.msg);
        }
      });
    };

    return FLDash;

  })();

}).call(this);
