// Generated by CoffeeScript 1.4.0
(function() {
  var SubletSave;

  SubletSave = (function() {
    var _this = this;

    function SubletSave() {}

    /*
    	Setup UI
    	Creates the listeners and all the UI for the
    	Sublet window
    */


    SubletSave.SetupUI = function(div) {
      var _this = this;
      this.div = div;
      $('#sublet_list_content').on("marker_added", function(event, marker_id) {
        return _this.Open(marker_id);
      });
      $('#sublet_list_content').on('click', '.sublet_list_item', function(event) {
        return _this.Open(event.currentTarget.id);
      });
      return this.div.find("#sublet_save_button").click(function() {
        return _this.Save();
      });
    };

    /*
    	Validate
    	Called before advancing steps
    	Returns true if validations pass; false otherwise
    */


    SubletSave.Validate = function() {
      var isValid;
      isValid = true;
      return this.div.find(".btn-group").each(function(index, value) {
        if ($(value).find(".active").size() === 0) {
          return isValid = false;
        }
      });
    };

    /*
    	Reset
    	Erases all the fields and resets
    	the Sublet window and sublet object
    */


    SubletSave.Reset = function() {
      return this.div.find(".btn-group").each(function(index, value) {
        return $(value).find(".active").removeClass("active");
      });
    };

    /*
    	Open
    	Opens up an existing sublet from a marker_id
    */


    SubletSave.Open = function(marker_id) {
      var sublets;
      sublets = A2Cribs.UserCache.GetAllAssociatedObjects("sublet", "marker", marker_id);
      if (sublets.length !== 0) {
        this.Populate(sublets[0]);
      } else {
        this.Reset();
      }
      return this.div.show();
    };

    /*
    */


    SubletSave.Populate = function(sublet_object) {
      return $(".sublet_fields").each(function(index, value) {
        var lol;
        if ($(value).hasClass("btn-group")) {
          return lol = "lol";
        } else if ($(value).hasClass("date-field")) {
          return lol = "lol";
        } else if ($(value).hasClass("text-field")) {
          return lol = "lol";
        }
      });
    };

    /*
    	Save
    	Submits sublet to backend to save
    	Assumes all front-end validations have been passed.
    */


    SubletSave.Save = function() {
      var _this = this;
      if (this.Validate()) {
        return $.ajax({
          url: myBaseUrl + "listings/Save/",
          type: "POST",
          data: this.GetSubletObject(),
          success: function(response) {
            var lol;
            return lol = "lol";
          }
        });
      } else {
        return new $.Deferred().reject();
      }
    };

    /*
    	GetSubletObject
    	Returns an object containing all sublet data from all 4 steps.
    */


    SubletSave.GetSubletObject = function() {
      var sublet_object;
      sublet_object = {
        'rent': 9999,
        'beds': 1,
        'baths': 1,
        'bathroom_type': 1,
        'parking_available': 1,
        'parking_description': 'lol',
        'utilities_included': 1,
        'utilities_description': "LOL",
        'start_date': '2013-09-02',
        'end_date': '2013-09-03',
        'available_now': 1,
        'air': 1,
        'furnished': 1,
        'description': 1
      };
      return {
        'Listing': {
          listing_type: 1,
          marker_id: 1
        },
        'Sublet': sublet_object,
        'Image': []
      };
    };

    /*
    	Replaces '/' with '-' to make convertible to mysql datetime format
    */


    SubletSave.GetMysqlDateFormat = function(dateString) {
      var beginDateFormatted, date, day, month, year;
      date = new Date(dateString);
      month = date.getMonth() + 1;
      if (month < 10) {
        month = "0" + month;
      }
      day = date.getDate();
      if (day < 10) {
        day = "0" + day;
      }
      year = date.getUTCFullYear();
      return beginDateFormatted = year + "-" + month + "-" + day;
    };

    SubletSave.GetTodaysDate = function() {
      var dd, mm, today, yyyy;
      today = new Date();
      dd = today.getDate();
      mm = today.getMonth() + 1;
      yyyy = today.getFullYear();
      if (dd < 10) {
        dd = '0' + dd;
      }
      if (mm < 10) {
        mm = '0' + mm;
      }
      today = mm + '/' + dd + '/' + yyyy;
      return today;
    };

    SubletSave.GetFormattedDate = function(date) {
      var beginDateFormatted, day, month, year;
      month = date.getMonth() + 1;
      if (month < 10) {
        month = "0" + month;
      }
      day = date.getDate();
      if (day < 10) {
        day = "0" + day;
      }
      year = date.getUTCFullYear();
      return beginDateFormatted = month + "/" + day + "/" + year;
    };

    $("#sublet_window").ready(function() {
      return SubletSave.SetupUI($("#sublet_window"));
    });

    return SubletSave;

  }).call(this);

}).call(this);
