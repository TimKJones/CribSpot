// Generated by CoffeeScript 1.6.3
(function() {
  A2Cribs.Hotlist = (function() {
    Hotlist.Initialize = function() {
      var el;
      el = $('#hotlist');
      A2Cribs.HotlistObj = new A2Cribs.Hotlist(el);
      return A2Cribs.HotlistObj.setup();
    };

    Hotlist.prototype.call = function(action, method, data) {
      var deferred, url,
        _this = this;
      deferred = new $.Deferred();
      url = myBaseUrl + action;
      $.ajax({
        url: url,
        data: data,
        type: method,
        success: function(response) {
          return deferred.resolve(JSON.parse(response));
        },
        error: function() {
          return deferred.reject();
        }
      });
      return deferred.promise();
    };

    function Hotlist(DOMRoot) {
      this.DOMRoot = DOMRoot;
      this.topSection = _.template(A2Cribs.Hotlist.topSectionTemplate);
      this.friendsList = _.template(A2Cribs.Hotlist.friendsListTemplate);
      this.friendsListPopup = _.template(A2Cribs.Hotlist.friendsListPopupTemplate);
      this.expandButton = _.template(A2Cribs.Hotlist.expandButtonTemplate);
      this.currentHotlist = this.get();
      this.sources = [
        {
          name: 'accounts',
          remote: {
            url: myBaseUrl + 'users/getbyname?name=%QUERY',
            filter: function(response) {
              return response.map(function(item) {
                var datum;
                datum = {
                  value: "" + item.User.email,
                  name: "" + item.User.first_name + " " + item.User.last_name
                };
                return datum;
              });
            }
          }
        }
      ];
      this.setEditing(false);
    }

    Hotlist.prototype.setup = function() {
      this.renderTopSection();
      this.show();
      this.renderBottomSection();
      return A2Cribs.FeaturedListings.resizeHandler();
    };

    Hotlist.prototype.renderTopSection = function() {
      this.DOMRoot.find('#top-section').html(this.topSection());
      this.DOMRoot.find('#title').show();
      this.DOMRoot.find('#add-field').hide();
      this.DOMRoot.find('#btn-add').hide();
      this.DOMRoot.find('#add-field').typeahead(this.sources);
      return this.DOMRoot.find('.twitter-typeahead').hide();
    };

    Hotlist.prototype.renderFriendsList = function(data) {
      this.DOMRoot.find('#friends').html(this.friendsList(data));
      this.DOMRoot.find('#add-field').val("");
      this.DOMRoot.find('.hotlist-remove-button').hide();
      this.DOMRoot.find('li.friend span').tooltip();
      return this.DOMRoot.find('.friend-name').hide();
    };

    Hotlist.prototype.renderBottomSection = function() {
      return this.DOMRoot.find('#bottom-section').html(this.expandButton());
    };

    Hotlist.prototype.getHotlistForPopup = function(listing_id) {
      return this.friendsListPopup({
        friends: this.currentHotlist,
        listing_id: listing_id
      });
    };

    Hotlist.prototype.get = function() {
      var _this = this;
      return $.when(this.call('friends/hotlist', 'GET', null)).then(function(data) {
        return _this.currentHotlist = data;
      }).fail(function(data) {
        return console.log("ERROR in A2Cribs.HotlistObj.get(): ", data);
      });
    };

    Hotlist.prototype.show = function() {
      var _this = this;
      return $.when(this.call('friends/hotlist', 'GET', null)).then(function(data) {
        return _this.renderFriendsList({
          friends: data
        });
      }).fail(function(data) {
        return console.log("ERROR in A2Cribs.HotlistObj.show(): ", data);
      });
    };

    Hotlist.prototype.add = function(friend) {
      var _this = this;
      return $.when(this.call('friends/hotlist/add', 'POST', {
        friend: friend
      }).then(function(data) {
        _this.renderFriendsList({
          friends: data
        });
        _this.expandForEdit();
        return _this.currentHotlist = data;
      }).fail(function(data) {
        return console.log("ERROR: " + data);
      }));
    };

    Hotlist.prototype.remove = function(friend) {
      var _this = this;
      return $.when(this.call('friends/hotlist/remove', 'POST', {
        friend: friend
      }).then(function(data) {
        _this.renderFriendsList({
          friends: data
        });
        _this.expandForEdit();
        return _this.currentHotlist = data;
      }).fail(function(data) {
        return console.log("ERROR: " + data);
      }));
    };

    Hotlist.prototype.share = function(listing, friend) {
      var _this = this;
      console.log("sharing", listing, friend);
      return $.when(this.call('friends/share', 'POST', {
        friend: friend,
        listing: listing
      }).then(function(data) {
        if (data.success === true) {
          return A2Cribs.UIManager.Success();
        } else {
          return A2Cribs.UIManager.Error();
        }
      }).fail(function(data) {
        return A2Cribs.UIManager.Error();
      }).always(function(data, status, jqXHR) {
        return console.log(data);
      }));
    };

    Hotlist.prototype.retract = function() {
      var hides, shows;
      shows = ['.friend-abbr', '#title'];
      hides = ['.hotlist-remove-button', '.friend-name', '#add-field', '.twitter-typeahead', '#btn-add'];
      this.DOMRoot.removeClass('expanded').removeClass('detailed');
      this.DOMRoot.find('i').removeClass('icon-caret-up').addClass('icon-caret-down');
      this.DOMRoot.find(shows.join(',')).show();
      this.DOMRoot.find(hides.join(',')).hide();
      return this.DOMRoot.find('#btn-edit').removeClass('editing').html('Edit');
    };

    Hotlist.prototype.expand = function() {
      this.DOMRoot.addClass('expanded');
      return this.DOMRoot.find('i').removeClass('icon-caret-down').addClass('icon-caret-up');
    };

    Hotlist.prototype.expandForEdit = function() {
      var hides, shows;
      this.expand();
      this.DOMRoot.addClass('detailed');
      shows = ['.hotlist-remove-button', '.twitter-typeahead', '.friend-name', '#add-field', '#btn-add'];
      hides = ['.friend-abbr', '#title'];
      this.DOMRoot.find(shows.join(',')).show();
      this.DOMRoot.find(hides.join(',')).hide();
      return this.DOMRoot.find('#btn-edit').addClass('editing').html('Done');
    };

    Hotlist.prototype.toggleEdit = function() {
      if (this.isEditing()) {
        this.setEditing(false);
        return this.retract();
      } else {
        this.setEditing(true);
        return this.expandForEdit();
      }
    };

    Hotlist.prototype.toggleExpand = function() {
      if ($('#hotlist').hasClass('expanded')) {
        return this.retract();
      } else {
        return this.expand(false);
      }
    };

    Hotlist.prototype.isEditing = function() {
      return this.DOMRoot.hasClass('editing');
    };

    Hotlist.prototype.setEditing = function(state) {
      if (state) {
        return this.DOMRoot.addClass('editing');
      } else {
        return this.DOMRoot.removeClass('editing');
      }
    };

    Hotlist.friendsListPopupTemplate = "<ul class=\"friends-popup\">\n  <% _.each(friends, function(elem, idx, list) { %>\n    <li>\n      <a href='#' onclick='A2Cribs.HotlistObj.share(<%=listing_id%>, <%=elem.id%>)'><%=elem.first_name%> <%=elem.last_name%></a>\n    </li>\n  <% }) %>\n</ul>";

    Hotlist.topSectionTemplate = "<div id='title'>Hotlist</div>\n<div id='share-all'></div>\n<input class='typeahead' type='text' autocomplete='off' id='add-field'></input>\n<div id='buttons' class='pull-right'>\n  <a href='#' data-toggle='popover' id='btn-add' class='btn btn-success' onClick=\"A2Cribs.HotlistObj.add($('#add-field').val())\">+</a>\n  <a href='#' id='btn-edit' class='btn btn-primary' onClick='A2Cribs.HotlistObj.toggleEdit()'>Edit</a>\n</div>";

    Hotlist.friendsListTemplate = "<ul class='friends'>\n  <% _.each(friends, function(elem, idx, list) { %>\n    <li class='friend'>\n      <span class='friend-abbr' data-toggle='tooltip' title='<%=elem.first_name%> <%=elem.last_name%>'>\n        <%=elem.first_name[0].toUpperCase()%><%=elem.last_name[0].toUpperCase()%> \n      </span>\n      <span class='friend-name'>\n        <%=elem.first_name%> <%=elem.last_name%> \n      </span>\n      <a class='hotlist-remove-button btn btn-danger pull-right' href='#' onClick='A2Cribs.HotlistObj.remove(<%=elem.id%>)'>Remove</a>\n    </li>\n  <% }); %>\n</ul>";

    Hotlist.expandButtonTemplate = "<a href='#' onclick='A2Cribs.HotlistObj.toggleExpand()' id='expand-button'><i class='icon icon-caret-down'></i></a>";

    return Hotlist;

  })();

}).call(this);
