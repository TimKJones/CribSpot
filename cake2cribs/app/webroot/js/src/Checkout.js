// Generated by CoffeeScript 1.4.0
(function() {

  A2Cribs.Checkout = (function() {
    var FeaturedListingOrder;

    function Checkout(widget, rules) {
      var _this = this;
      this.widget = widget;
      this.rules = rules;
      this.FeaturedListings = [];
      $('.featured-listing-order-item').each(function(index, element) {
        return _this.FeaturedListings.push(new FeaturedListingOrder($(element), _this.rules.FeaturedListings, _this.orderChanged));
      });
      $(this.widget).on('dateChange', '.featured-listing-order-item', function(event, floi) {
        return _this.calculateTotal();
      });
      $(this.widget).find('.buy').click(function() {
        return _this.startWalletFlow();
      });
    }

    Checkout.prototype.calculateTotal = function() {
      var d, day, listing, total, weekdays, weekends, _i, _j, _len, _len1, _ref, _ref1;
      total = 0;
      weekdays = 0;
      weekends = 0;
      _ref = this.FeaturedListings;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        listing = _ref[_i];
        _ref1 = listing.getDates();
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          d = _ref1[_j];
          day = d.getDay();
          if (day === 0 || day === 6) {
            weekends++;
            total += this.rules.FeaturedListings.costs.weekend;
          } else {
            weekdays++;
            total += this.rules.FeaturedListings.costs.weekday;
          }
        }
      }
      $(this.widget).find('.total').html(" $" + (total.toFixed(2)));
      $(this.widget).find('.weekdays').html(weekdays);
      $(this.widget).find('.weekends').html(weekends);
      return $(this.widget).find('.total-tally').show();
    };

    Checkout.prototype.getOrderRequest = function() {
      var listing, request, _i, _len, _ref;
      request = [];
      _ref = this.FeaturedListings;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        listing = _ref[_i];
        request.push(listing.getOrder());
      }
      console.log(request);
      return request;
    };

    Checkout.prototype.startWalletFlow = function() {
      var data, url,
        _this = this;
      data = {
        'type': 'featured-listing',
        'order': JSON.stringify(this.getOrderRequest())
      };
      url = '/order/getJwt';
      return $.post(url, data, function(response_raw) {
        var response;
        response = JSON.parse(response_raw);
        if (!response.success) {
          console.log(response.message);
        }
        return google.payments.inapp.buy({
          parameters: {},
          jwt: response.jwt,
          success: function() {
            return alert("success");
          },
          failture: function() {
            return alert("fail");
          }
        });
      });
    };

    FeaturedListingOrder = (function() {

      function FeaturedListingOrder(item, rules) {
        this.item = item;
        this.rules = rules;
        this.address = this.item.find('.address').text();
        this.listing_id = this.item.attr('id');
        this.initMultiDatesPicker();
      }

      FeaturedListingOrder.prototype.initMultiDatesPicker = function() {
        var _this = this;
        return this.datepicker = $(this.item).find('.mdp').multiDatesPicker({
          minDate: new Date(),
          onSelect: function(dateText, inst) {
            return _this.dateSelected(dateText, inst);
          }
        });
      };

      FeaturedListingOrder.prototype.dateSelected = function(dateText, picker_inst) {
        return this.item.trigger('dateChange', this);
      };

      FeaturedListingOrder.prototype.getDates = function(type) {
        if (type == null) {
          type = 'object';
        }
        return this.datepicker.multiDatesPicker('getDates', type);
      };

      FeaturedListingOrder.prototype.getOrder = function() {
        var date;
        return date = {
          address: this.address,
          listing_id: this.listing_id,
          dates: this.getDates('string')
        };
      };

      return FeaturedListingOrder;

    })();

    return Checkout;

  })();

}).call(this);
