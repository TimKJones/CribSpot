// Generated by CoffeeScript 1.4.0
(function() {

  A2Cribs.FeaturedListings = (function() {
    var Sidebar;

    function FeaturedListings(widget) {
      this.widget = widget;
    }

    FeaturedListings.GetFlIds = function(university_id) {
      var deferred,
        _this = this;
      deferred = new $.Deferred();
      $.get("/featuredListings/cycleIds/" + university_id + "/" + this.FL_LIMIT, function(response) {
        var listing_ids;
        listing_ids = JSON.parse(response);
        if (listing_ids != null) {
          return deferred.resolve(listing_ids);
        } else {
          return deferred.resolve(null);
        }
      });
      return deferred.promise();
    };

    FeaturedListings.FL_LIMIT = 5;

    FeaturedListings.GetListingDeferred = function(id, type) {
      var deferred, listing_id, listing_type,
        _this = this;
      deferred = new $.Deferred();
      listing_id = id;
      listing_type = type;
      $.ajax({
        url: myBaseUrl + "Listings/GetListing/" + listing_id,
        type: "GET",
        success: function(data) {
          var item, key, listing, response_data, value, _i, _len;
          response_data = JSON.parse(data);
          for (_i = 0, _len = response_data.length; _i < _len; _i++) {
            item = response_data[_i];
            for (key in item) {
              value = item[key];
              if (A2Cribs[key] != null) {
                A2Cribs.UserCache.Set(new A2Cribs[key](value));
              }
            }
          }
          listing = A2Cribs.UserCache.Get(listing_type, listing_id);
          return deferred.resolve(item);
        },
        error: function() {
          return deferred.resolve(null);
        }
      });
      return deferred.promise();
    };

    FeaturedListings.FetchListingsByIds = function(listing_ids, active_listing_type) {
      var deferred, id, listingDefereds, _i, _len,
        _this = this;
      deferred = new $.Deferred();
      listingDefereds = [];
      for (_i = 0, _len = listing_ids.length; _i < _len; _i++) {
        id = listing_ids[_i];
        listingDefereds.push(A2Cribs.FeaturedListings.GetListingDeferred(id, active_listing_type));
      }
      return $.when.apply($, listingDefereds).then(function() {
        return deferred.resolve(arguments);
      });
    };

    FeaturedListings.InitializeSidebar = function(university_id, active_listing_type) {
      var alt, getFLIds, getRanIds,
        _this = this;
      alt = active_listing_type;
      if (!(this.SidebarListingCache != null)) {
        this.SidebarListingCache = {};
      }
      getFLIds = this.GetFlIds(university_id);
      getRanIds = this.GetRandomListingIdsFromMap(5);
      console.log("Initing sidebar");
      $.when(getFLIds, getRanIds).then(function(fl_ids, ran_ids) {
        var get_fl_listings, get_ran_listings;
        get_fl_listings = _this.FetchListingsByIds(fl_ids, alt);
        get_ran_listings = _this.FetchListingsByIds(ran_ids, alt);
        return $.when(get_fl_listings, get_ran_listings).then(function(fl_listings, ran_listings) {
          var sidebar;
          return sidebar = new Sidebar($('#fl-side-bar'), fl_listings, ran_listings);
        });
      });
      return this.GetRandomListingIdsFromMap(5, function(listing_ids) {
        return console.log(listing_ids);
      });
    };

    FeaturedListings.GetRandomListingIdsFromMap = function(num_) {
      var num,
        _this = this;
      if (!(this.RanIdDeferred != null)) {
        this.RanIdDeferred = new $.Deferred();
      }
      num = num_;
      $.when(A2Cribs.Map.LoadBasicData()).then(function(data) {
        var basic_data, d, ids, shuf_ids, _i, _len;
        basic_data = JSON.parse(data);
        ids = [];
        for (_i = 0, _len = basic_data.length; _i < _len; _i++) {
          d = basic_data[_i];
          ids.push(d.Listing.listing_id);
        }
        shuf_ids = _.shuffle(ids);
        return _this.RanIdDeferred.resolve(shuf_ids.slice(0, shuf_ids.length % num));
      });
      return this.RanIdDeferred.promise();
    };

    Sidebar = (function() {

      function Sidebar(SidebarUI, fl_listings, ran_listings) {
        var fl_list, ran_list;
        this.SidebarUI = SidebarUI;
        this.ListItemTemplate = _.template(A2Cribs.FeaturedListings.ListItemHTML);
        fl_list = this.getListHtml(fl_listings);
        ran_list = this.getListHtml(ran_listings);
        this.SidebarUI.find('#featured-listings').html(fl_list);
        this.SidebarUI.find('#ran-listings').html(ran_list);
      }

      Sidebar.prototype.getDateString = function(date) {
        var month, year;
        if (!(this.MonthArray != null)) {
          this.MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        }
        month = this.MonthArray[date.getMonth()];
        year = date.getFullYear();
        return "" + month + " " + year;
      };

      Sidebar.prototype.getListHtml = function(listings) {
        var beds, data, end_date, list, listing, name, start_date, _i, _len;
        list = "";
        for (_i = 0, _len = listings.length; _i < _len; _i++) {
          listing = listings[_i];
          start_date = new Date(listing.Rental.start_date);
          end_date = new Date(listing.Rental.end_date);
          if (listing.Marker.alternate_name != null) {
            name = listing.Marker.alternate_name;
          } else {
            name = listing.Marker.street_address;
          }
          if (listing.Rental.beds > 1) {
            beds = "" + listing.Rental.beds + " beds";
          } else {
            beds = "" + listing.Rental.beds + " bed";
          }
          data = {
            rent: parseFloat(listing.Rental.rent).toFixed(2),
            beds: beds,
            building_type: listing.Marker.building_type_id,
            start_date: this.getDateString(start_date),
            end_date: this.getDateString(end_date),
            name: name,
            img: "http://lorempixel.com/96/64/city/"
          };
          list += this.ListItemTemplate(data);
        }
        return list;
      };

      return Sidebar;

    })();

    FeaturedListings.ListItemHTML = "<div class = 'fl-sb-item'>\n    <span class = 'img-wrapper'>\n        <img src = '<%=img%>'></img>\n    </span>\n    <span class = 'vert-line'></span>\n    <span class = 'info-wrapper'>\n        <div class = 'info-row'>\n            <span class = 'rent price-text'><%= \"$\" + rent %></span>\n            <span class = 'divider'>|</span>\n            <span class = 'beds'><%= beds %> </span>\n            <span class = 'favorite pull-right'><i class = 'icon-heart fav-icon'></i></span>    \n        </div>\n        <div class = 'row-div'></div>\n        <div class = 'info-row'>\n            <span class = 'building-type'><%= building_type %></span>\n            <span class = 'divider'>|</span>\n            <span class = 'lease-start'><%= start_date %></span> - <span class = 'lease-end'><%= end_date %></span>\n        </div>\n        <div class = 'row-div'></div>\n        <div class = 'info-row'>\n            <i class = 'icon-map-marker'></i><span class = 'name'><%=name%></span>\n        </div>\n    </span>   \n</div>";

    return FeaturedListings;

  })();

}).call(this);
